# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "Main" ]
  pull_request:
    branches: [ "Main" ]

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        mongodb-version: ['latest']

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: MongoDB in GitHub Actions
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Change wrapper permissions
      run: chmod +x ./gradlew

    - name: Execute Gradle build
      run: gradle build

    # report the results
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: success() || failure() # always run even if the previous step fails
      with:
        report_paths: '**/build/test-results/test/TEST-*.xml'
        detailed_summary: true # display detailed summary of the report
        include_passed: true # include passed tests in the results table